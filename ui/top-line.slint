import { MyButton } from "my-button.slint";

export component TopLine inherits Rectangle {
    background: white.transparentize(30%);

    in property <length> button-size: 23px;
    height: button-size + 6px;

    HorizontalLayout {
        alignment: space-between;
        padding: 3px;

        HorizontalLayout {

            Image {
                source: @image-url("res/icons/dog.png");
                width: parent.height;
                height: parent.height;
            }

            Text {
                text: "Wav-wav!";
                font-size: button-size*90%;
                font-family: "IrishGrover";
            }
        }

        HorizontalLayout {
            padding: 0px;
            spacing: 3px;

            minimize-button := Rectangle {

                out property pressed <=> minimize-button-touch.pressed;
                width: button-size;
                height: button-size;
                border-radius: 15% * button-size;
                background: (pressed ? gray : black).transparentize(70%);
                // callback clicked <=> play_button_touch.clicked;
                minimize-button_touch := TouchArea {
                    // clicked => { playing = root.play_button_clicked(); }
                }

                Image {
                    height: button-size * 90%;
                    width: button-size * 90%;
                    source: @image-url("res/icons/hide.svg");
                }
            }

            window-button := Rectangle {

                out property pressed <=> window-button-touch.pressed;
                width: button-size;
                height: button-size;
                border-radius: 15% * button-size;
                background: (pressed ? gray : black).transparentize(70%);
                // callback clicked <=> play_button_touch.clicked;
                window-button_touch := TouchArea {
                    // clicked => { playing = root.play_button_clicked(); }
                }

                Image {
                    height: button-size * 90%;
                    width: button-size * 90%;
                    source: @image-url("res/icons/fullscreen.svg");
                }
            }

            close-button := Rectangle {

                out property pressed <=> close-button-touch.pressed;
                width: button-size;
                height: button-size;
                border-radius: 15% * button-size;
                background: (pressed ? gray : black).transparentize(70%);
                // callback clicked <=> play_button_touch.clicked;
                close-button-touch := TouchArea {
                    // clicked => { playing = root.play_button_clicked(); }
                }

                Image {
                    height: button-size * 90%;
                    width: button-size * 90%;
                    source: @image-url("res/icons/close.svg");
                }
            }
        }
    }
}
